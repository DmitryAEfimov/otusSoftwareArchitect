apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inventory.fullname" . }}
  labels:
  {{- include "inventory.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
  {{- include "inventory.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
    {{- include "inventory.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inventory.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-actual
          image: alpine:latest
          env:
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: "{{ include "inventory.fullname" . }}-config"
                  key: dbuser
            - name: DB_VERSION
              value: {{ .Values.service.database.version | quote }}
            - name: DB_HOSTNAME
              value: {{ include "postgresql.fullname" . | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          envFrom:
            - secretRef:
                name: "{{ include "inventory.fullname" . }}-secret"
          command:
            - sh
            - "-c"
            - |
              apk add postgresql-client && \
              until [[ "`PGPASSWORD=$DB_PASSWORD \
              psql -XAt -h $DB_HOSTNAME -U $DB_USER -c 'select max(version) from flyway_schema_history' $DB_NAME`" == "$DB_VERSION" ]];
              do
                echo waiting for database;
                sleep 2;
              done;
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.appRepository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          env:
            - name: SPRING_APPLICATION_JSON
              valueFrom:
                configMapKeyRef:
                  name: "{{ include "inventory.fullname" . }}-config"
                  key: appconfig.json
          livenessProbe:
            httpGet:
              path: /manage/health
              port: http
            periodSeconds: 5
          resources:
      {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
